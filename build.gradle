plugins {
    id 'java-library'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'checkstyle'
}

repositories {
    mavenCentral()
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://jitpack.io" }
}

dependencies {
    implementation 'dev.jorel:commandapi-bukkit-shade:9.3.0'
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    compileOnly "com.github.GriefPrevention:GriefPrevention:16.18.2"
    compileOnly 'org.jetbrains:annotations:15.0'
}

group = 'au.com.glob'
version = './src/build/version.py'.execute().text.trim()
description = 'ClodMC'
java.sourceCompatibility = JavaVersion.VERSION_17

shadowJar {
    archiveClassifier.set('')
    enableRelocation true
    minimize()
}
tasks.named('build') {
    dependsOn('shadowJar')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:deprecation'
}

spotless {
    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore'
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
    java {
        googleJavaFormat('1.19.2').reflowLongStrings().skipJavadocFormatting()
        formatAnnotations()
    }
    yaml {
        target 'src/main/resources/*.yml'
        trimTrailingWhitespace()
        endWithNewline()
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching("plugin.yml") {
        expand props
    }
}

if (file('local.gradle').exists()) {
    apply from: 'local.gradle'
}
