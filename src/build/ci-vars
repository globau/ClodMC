#!/usr/bin/env python3
import hashlib
from pathlib import Path

import gradle
import jdk
from util import Error, main_wrapper


def md5(*items: str) -> str:
    return hashlib.md5(":".join(items).encode()).hexdigest()


def main() -> None:
    config = gradle.BuildConfig()

    jdk_path = jdk.PATH
    jdk_ver = config.get("jdk_version")

    with (Path.cwd() / "gradle/wrapper/gradle-wrapper.properties").open() as f:
        for line in f:
            if line.startswith("distributionUrl="):
                parts = line.removeprefix("distributionUrl=").rstrip().split("/")
                gradlew_ver = parts[-1].removesuffix(".zip")
                break
        else:
            raise Error("failed to find gradle version")
    gradlew_path = f"~/.gradle/wrapper/dists/{gradlew_ver}"

    libs_path = "libs"
    libs_key = md5(
        "libs",
        config.get("google_java_format_version"),
        config.get("checkstyle_version"),
    )

    print(f"jdk-path={jdk_path}")
    print(f"jdk-key=jdk-{jdk_ver}")
    print(f"gradlew-path={gradlew_path}")
    print(f"gradlew-key=jdk-{gradlew_ver}")
    print(f"libs-path={libs_path}")
    print(f"libs-key=libs-{libs_key}")


with main_wrapper():
    main()
